class Solution {
public:
    int shipWithinDays(std::vector<int>& weights, int days) {
    int low=*max_element(weights.begin(), weight.end(), 0);
    int hight=accumulate(weights.begin(), weight.end(), 0);
   while(low<=high){
   int mid=(low+high)/2;
  int numberOfDays=findDays(weight,mid);
  if(numberOfDays<=days){
  high=mid-1;
  }
  else{
  low=mid+1;
  }
   }
   return low;
    }
    private:
    int findDays(vector<int> &weights, int cap){
    int day=1; 
    int load=0;
    for(int i=0=;i<weights.size();i++){
    if(load+weights[i]>cap){
    day+=1;
    laod=weight[i];
    }
    else{
    load+=weight[i];
    }

    }
    return day;
    }
    };
